{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { c as chevronDown } from './index7.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { d as defineCustomElement$2 } from './icon.js';\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-expanding) #content-wrapper{overflow:auto}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-expanding) #content-wrapper{overflow:auto}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\nconst Accordion = /*@__PURE__*/proxyCustomElement(class Accordion extends HTMLElement {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.__registerHost();\n    this.__attachShadow();\n    this.updateListener = () => this.updateState(false);\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const {\n        headerEl\n      } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      if (slot.assignedElements === undefined) return;\n      return slot.assignedElements().find(el => el.tagName === 'ION-ITEM');\n    };\n    this.setAria = function () {\n      let expanded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const ionItem = _this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const {\n        toggleIconSlot,\n        toggleIcon\n      } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const {\n        contentEl,\n        contentElWrapper\n      } = _this;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        _this.state = 4 /* AccordionState.Expanded */;\n        return;\n      }\n      if (_this.state === 4 /* AccordionState.Expanded */) {\n        return;\n      }\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n      if (_this.shouldAnimate()) {\n        raf(() => {\n          _this.state = 8 /* AccordionState.Expanding */;\n          _this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            _this.state = 4 /* AccordionState.Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      } else {\n        _this.state = 4 /* AccordionState.Expanded */;\n      }\n    };\n\n    this.collapseAccordion = function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const {\n        contentEl\n      } = _this;\n      if (initialUpdate || contentEl === undefined) {\n        _this.state = 1 /* AccordionState.Collapsed */;\n        return;\n      }\n      if (_this.state === 1 /* AccordionState.Collapsed */) {\n        return;\n      }\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n      if (_this.shouldAnimate()) {\n        _this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            _this.state = 2 /* AccordionState.Collapsing */;\n            await waitForTransition;\n            _this.state = 1 /* AccordionState.Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      } else {\n        _this.state = 1 /* AccordionState.Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const accordionGroup = _this.accordionGroupEl;\n      const accordionValue = _this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        _this.expandAccordion(initialUpdate);\n        _this.isNext = _this.isPrevious = false;\n      } else {\n        _this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = _this.getNextSibling();\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          _this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = _this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          _this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n    this.state = 1 /* AccordionState.Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    this.value = `ion-accordion-${accordionIds++}`;\n    this.disabled = false;\n    this.readonly = false;\n    this.toggleIcon = chevronDown;\n    this.toggleIconSlot = 'end';\n  }\n  valueChanged() {\n    this.updateState();\n  }\n  connectedCallback() {\n    var _a;\n    const accordionGroupEl = this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group');\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const {\n      accordionGroupEl,\n      value,\n      state\n    } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* AccordionState.Collapsed */ || state === 2 /* AccordionState.Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const {\n      disabled,\n      readonly\n    } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* AccordionState.Expanding */,\n        'accordion-expanded': this.state === 4 /* AccordionState.Expanded */,\n        'accordion-collapsing': this.state === 2 /* AccordionState.Collapsing */,\n        'accordion-collapsed': this.state === 1 /* AccordionState.Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': this.shouldAnimate()\n      }\n    }, h(\"div\", {\n      onClick: () => this.toggleExpanded(),\n      id: \"header\",\n      part: headerPart,\n      \"aria-controls\": \"content\",\n      ref: headerEl => this.headerEl = headerEl\n    }, h(\"slot\", {\n      name: \"header\"\n    })), h(\"div\", {\n      id: \"content\",\n      part: contentPart,\n      role: \"region\",\n      \"aria-labelledby\": \"header\",\n      ref: contentEl => this.contentEl = contentEl\n    }, h(\"div\", {\n      id: \"content-wrapper\",\n      ref: contentElWrapper => this.contentElWrapper = contentElWrapper\n    }, h(\"slot\", {\n      name: \"content\"\n    }))));\n  }\n  static get delegatesFocus() {\n    return true;\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: accordionIosCss,\n      md: accordionMdCss\n    };\n  }\n}, [49, \"ion-accordion\", {\n  \"value\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"toggleIcon\": [1, \"toggle-icon\"],\n  \"toggleIconSlot\": [1, \"toggle-icon-slot\"],\n  \"state\": [32],\n  \"isNext\": [32],\n  \"isPrevious\": [32]\n}]);\nlet accordionIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-accordion\", \"ion-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-accordion\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Accordion);\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonAccordion = Accordion;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonAccordion, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","c","chevronDown","config","b","getIonMode","r","raf","t","transitionEndAsync","a","addEventListener","removeEventListener","g","getElementRoot","d","defineCustomElement$2","accordionIosCss","accordionMdCss","Accordion","constructor","_this","this","__registerHost","__attachShadow","updateListener","updateState","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","arguments","length","root","setAttribute","slotToggleIcon","toggleIconSlot","toggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","state","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","get","accordionGroupEl","accordionGroup","accordionValue","value","shouldExpand","Array","isArray","includes","isNext","isPrevious","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","accordionIds","disabled","readonly","valueChanged","connectedCallback","_a","closest","disconnectedCallback","componentDidLoad","toggleExpanded","expand","requestAccordionToggle","render","mode","headerPart","contentPart","class","onClick","id","part","ref","name","role","delegatesFocus","watchers","ios","md","defineCustomElement$1","customElements","components","forEach","define","IonAccordion","defineCustomElement"],"sources":["C:/Users/Edinéia/Documents/NutriFood/node_modules/@ionic/core/components/ion-accordion.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { c as chevronDown } from './index7.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { d as defineCustomElement$2 } from './icon.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-expanding) #content-wrapper{overflow:auto}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-expanding) #content-wrapper{overflow:auto}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nconst Accordion = /*@__PURE__*/ proxyCustomElement(class Accordion extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.updateListener = () => this.updateState(false);\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      if (slot.assignedElements === undefined)\n        return;\n      return slot.assignedElements().find((el) => el.tagName === 'ION-ITEM');\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      const { contentEl, contentElWrapper } = this;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        this.state = 4 /* AccordionState.Expanded */;\n        return;\n      }\n      if (this.state === 4 /* AccordionState.Expanded */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* AccordionState.Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* AccordionState.Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* AccordionState.Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      const { contentEl } = this;\n      if (initialUpdate || contentEl === undefined) {\n        this.state = 1 /* AccordionState.Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* AccordionState.Collapsed */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* AccordionState.Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* AccordionState.Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* AccordionState.Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n    this.state = 1 /* AccordionState.Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    this.value = `ion-accordion-${accordionIds++}`;\n    this.disabled = false;\n    this.readonly = false;\n    this.toggleIcon = chevronDown;\n    this.toggleIconSlot = 'end';\n  }\n  valueChanged() {\n    this.updateState();\n  }\n  connectedCallback() {\n    var _a;\n    const accordionGroupEl = (this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group'));\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* AccordionState.Collapsed */ || state === 2 /* AccordionState.Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* AccordionState.Expanding */,\n        'accordion-expanded': this.state === 4 /* AccordionState.Expanded */,\n        'accordion-collapsing': this.state === 2 /* AccordionState.Collapsing */,\n        'accordion-collapsed': this.state === 1 /* AccordionState.Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': this.shouldAnimate(),\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: (headerEl) => (this.headerEl = headerEl) }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: (contentEl) => (this.contentEl = contentEl) }, h(\"div\", { id: \"content-wrapper\", ref: (contentElWrapper) => (this.contentElWrapper = contentElWrapper) }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: accordionIosCss,\n    md: accordionMdCss\n  }; }\n}, [49, \"ion-accordion\", {\n    \"value\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"toggleIcon\": [1, \"toggle-icon\"],\n    \"toggleIconSlot\": [1, \"toggle-icon-slot\"],\n    \"state\": [32],\n    \"isNext\": [32],\n    \"isPrevious\": [32]\n  }]);\nlet accordionIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-accordion\", \"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-accordion\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Accordion);\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonAccordion = Accordion;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonAccordion, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}