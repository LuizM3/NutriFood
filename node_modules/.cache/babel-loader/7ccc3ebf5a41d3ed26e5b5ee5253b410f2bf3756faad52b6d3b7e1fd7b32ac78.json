{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, s as scrollToTop } from './index8.js';\nimport { c as componentOnReady } from './helpers.js';\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise(resolve => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\nexport { startStatusTap };","map":{"version":3,"names":["readTask","writeTask","a","findClosestIonContent","s","scrollToTop","c","componentOnReady","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","Promise","resolve","then","style","setProperty","removeProperty"],"sources":["C:/Users/EdinÃ©ia/Documents/NutriFood/node_modules/@ionic/core/components/status-tap.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, s as scrollToTop } from './index8.js';\nimport { c as componentOnReady } from './helpers.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,+BAA+B;AACnE,SAASC,CAAC,IAAIC,qBAAqB,EAAEC,CAAC,IAAIC,WAAW,QAAQ,aAAa;AAC1E,SAASC,CAAC,IAAIC,gBAAgB,QAAQ,cAAc;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,GAAG,GAAGC,MAAM;EAClBD,GAAG,CAACE,gBAAgB,CAAC,WAAW,EAAE,MAAM;IACtCX,QAAQ,CAAC,MAAM;MACb,MAAMY,KAAK,GAAGH,GAAG,CAACI,UAAU;MAC5B,MAAMC,MAAM,GAAGL,GAAG,CAACM,WAAW;MAC9B,MAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAAgB,CAACN,KAAK,GAAG,CAAC,EAAEE,MAAM,GAAG,CAAC,CAAC;MAC3D,IAAI,CAACE,EAAE,EAAE;QACP;MACF;MACA,MAAMG,SAAS,GAAGhB,qBAAqB,CAACa,EAAE,CAAC;MAC3C,IAAIG,SAAS,EAAE;QACb,IAAIC,OAAO,CAAEC,OAAO,IAAKd,gBAAgB,CAACY,SAAS,EAAEE,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UACxErB,SAAS,CAAC,YAAY;YACpB;AACZ;AACA;AACA;AACA;AACA;AACA;YACYkB,SAAS,CAACI,KAAK,CAACC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC;YACnD,MAAMnB,WAAW,CAACc,SAAS,EAAE,GAAG,CAAC;YACjCA,SAAS,CAACI,KAAK,CAACE,cAAc,CAAC,YAAY,CAAC;UAC9C,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAASjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}