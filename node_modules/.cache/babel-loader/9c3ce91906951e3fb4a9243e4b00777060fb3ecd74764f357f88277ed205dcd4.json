{"ast":null,"code":"import { getAssetPath, proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nlet CACHED_MAP;\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  } else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nconst addIcons = icons => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nconst getUrl = i => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = iconName => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  } else if (md && mode === 'md') {\n    iconName = toLower(md);\n  } else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nconst getSrc = src => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nconst isSrc = str => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = val => typeof val === 'string';\nconst toLower = val => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = function (el) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = hostEl => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\nconst validateContent = svgContent => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nconst isValid = elm => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst isSvgDataUrl = url => url.startsWith('data:image/svg+xml');\nconst isEncodedDataUrl = url => url.indexOf(';utf8,') !== -1;\nconst ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      } else {\n        // we don't already have a request\n        req = fetch(url).then(rsp => {\n          if (rsp.ok) {\n            return rsp.text().then(svgContent => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    } else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}@supports (background: -webkit-named-image(i)){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}:host(.flip-rtl):host-context([dir='rtl']) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}@supports selector(:dir(rtl)){:host(.flip-rtl:dir(rtl)) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.flip-rtl:dir(ltr)) .icon-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\nconst Icon = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n    this.sanitize = true;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = this.io = new window.IntersectionObserver(data => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, {\n        rootMargin\n      });\n      io.observe(el);\n    } else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        } else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => this.svgContent = ioniconContent.get(url));\n        }\n      }\n    }\n    this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n  }\n  render() {\n    const {\n      flipRtl,\n      iconName,\n      inheritedAttributes,\n      el\n    } = this;\n    const mode = this.mode || 'md';\n    // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n    const shouldAutoFlip = iconName ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false : false;\n    // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n    const shouldBeFlippable = flipRtl || shouldAutoFlip;\n    return h(Host, Object.assign({\n      role: \"img\",\n      class: Object.assign(Object.assign({\n        [mode]: true\n      }, createColorClasses(this.color)), {\n        [`icon-${this.size}`]: !!this.size,\n        'flip-rtl': shouldBeFlippable,\n        'icon-rtl': shouldBeFlippable && isRTL(el)\n      })\n    }, inheritedAttributes), Build.isBrowser && this.svgContent ? h(\"div\", {\n      class: \"icon-inner\",\n      innerHTML: this.svgContent\n    }) : h(\"div\", {\n      class: \"icon-inner\"\n    }));\n  }\n  static get assetsDirs() {\n    return [\"svg\"];\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"name\": [\"loadIcon\"],\n      \"src\": [\"loadIcon\"],\n      \"icon\": [\"loadIcon\"],\n      \"ios\": [\"loadIcon\"],\n      \"md\": [\"loadIcon\"]\n    };\n  }\n  static get style() {\n    return iconCss;\n  }\n}, [1, \"ion-icon\", {\n  \"mode\": [1025],\n  \"color\": [1],\n  \"ios\": [1],\n  \"md\": [1],\n  \"flipRtl\": [4, \"flip-rtl\"],\n  \"name\": [513],\n  \"src\": [1],\n  \"icon\": [8],\n  \"size\": [1],\n  \"lazy\": [4],\n  \"sanitize\": [4],\n  \"svgContent\": [32],\n  \"isVisible\": [32]\n}]);\nconst getIonMode = () => Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';\nconst createColorClasses = color => {\n  return color ? {\n    'ion-color': true,\n    [`ion-color-${color}`]: true\n  } : null;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Icon);\n        }\n        break;\n    }\n  });\n}\nconst IonIcon = Icon;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonIcon, addIcons as a, defineCustomElement };","map":{"version":3,"names":["getAssetPath","proxyCustomElement","HTMLElement","Build","h","Host","CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","addIcons","icons","Object","keys","forEach","name","set","getUrl","i","url","getSrc","src","getName","icon","mode","ios","md","getNamedUrl","iconName","get","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","inheritAttributes","el","attributes","arguments","undefined","attributeObject","attr","hasAttribute","value","getAttribute","removeAttribute","isRTL","hostEl","dir","document","validateContent","svgContent","div","createElement","innerHTML","childNodes","nodeName","removeChild","svgElm","firstElementChild","svgClass","setAttribute","isValid","elm","nodeType","indexOf","isSvgDataUrl","startsWith","isEncodedDataUrl","ioniconContent","requests","parser","getSvgContent","sanitize","req","fetch","DOMParser","doc","parseFromString","svg","querySelector","outerHTML","Promise","resolve","then","rsp","ok","text","iconCss","Icon","constructor","__registerHost","__attachShadow","inheritedAttributes","isVisible","getIonMode","lazy","componentWillLoad","connectedCallback","waitUntilVisible","loadIcon","disconnectedCallback","io","disconnect","rootMargin","cb","isBrowser","IntersectionObserver","data","isIntersecting","observe","has","render","flipRtl","shouldAutoFlip","includes","shouldBeFlippable","assign","role","class","createColorClasses","color","size","assetsDirs","watchers","style","documentElement","defineCustomElement$1","customElements","components","tagName","define","IonIcon","defineCustomElement","a"],"sources":["C:/Users/Edinéia/Documents/NutriFood/node_modules/ionicons/components/ion-icon.js"],"sourcesContent":["import { getAssetPath, proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\n\nlet CACHED_MAP;\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nconst addIcons = (icons) => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nconst getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nconst getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nconst isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = (val) => typeof val === 'string';\nconst toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nconst validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nconst isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nconst isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n\nconst ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      }\n      else {\n        // we don't already have a request\n        req = fetch(url).then((rsp) => {\n          if (rsp.ok) {\n            return rsp.text().then((svgContent) => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}@supports (background: -webkit-named-image(i)){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}:host(.flip-rtl):host-context([dir='rtl']) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}@supports selector(:dir(rtl)){:host(.flip-rtl:dir(rtl)) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.flip-rtl:dir(ltr)) .icon-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n    this.sanitize = true;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n      }\n    }\n    this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n  }\n  render() {\n    const { flipRtl, iconName, inheritedAttributes, el } = this;\n    const mode = this.mode || 'md';\n    // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n    const shouldAutoFlip = iconName\n      ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false\n      : false;\n    // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n    const shouldBeFlippable = flipRtl || shouldAutoFlip;\n    return (h(Host, Object.assign({ role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': shouldBeFlippable, 'icon-rtl': shouldBeFlippable && isRTL(el) }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  get el() { return this; }\n  static get watchers() { return {\n    \"name\": [\"loadIcon\"],\n    \"src\": [\"loadIcon\"],\n    \"icon\": [\"loadIcon\"],\n    \"ios\": [\"loadIcon\"],\n    \"md\": [\"loadIcon\"]\n  }; }\n  static get style() { return iconCss; }\n}, [1, \"ion-icon\", {\n    \"mode\": [1025],\n    \"color\": [1],\n    \"ios\": [1],\n    \"md\": [1],\n    \"flipRtl\": [4, \"flip-rtl\"],\n    \"name\": [513],\n    \"src\": [1],\n    \"icon\": [8],\n    \"size\": [1],\n    \"lazy\": [4],\n    \"sanitize\": [4],\n    \"svgContent\": [32],\n    \"isVisible\": [32]\n  }]);\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Icon);\n      }\n      break;\n  } });\n}\n\nconst IonIcon = Icon;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonIcon, addIcons as a, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}